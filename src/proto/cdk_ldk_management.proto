syntax = "proto3";

package cdk_ldk_management;

service CdkLdkManagement {
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {}
  rpc GetNewAddress(GetNewAddressRequest) returns (GetNewAddressResponse) {}
  rpc OpenChannel(OpenChannelRequest) returns (OpenChannelResponse) {}
  rpc CloseChannel(CloseChannelRequest) returns (CloseChannelResponse) {}
  rpc ListBalance(ListBalanceRequest) returns (ListBalanceResponse) {}
  rpc ListChannels(ListChannelsRequest) returns (ListChannelsResponse) {}
  rpc SendOnchain(SendOnchainRequest) returns (SendOnchainResponse) {}
  rpc PayBolt11Invoice(PayBolt11InvoiceRequest) returns (PaymentResponse) {}
  rpc PayBolt12Offer(PayBolt12OfferRequest) returns (PaymentResponse) {}
  rpc CreateBolt11Invoice(CreateBolt11InvoiceRequest) returns (CreateInvoiceResponse) {}
  rpc CreateBolt12Offer(CreateBolt12OfferRequest) returns (CreateOfferResponse) {}
}

message GetInfoRequest {}

message GetInfoResponse {
  string node_id = 1;
  string alias = 2;
  uint64 num_peers = 3;
  uint64 num_connected_peers = 4;
  uint64 num_active_channels = 5;
  uint64 num_inactive_channels = 6;
  repeated string announcement_addresses = 7;
  repeated string listening_addresses = 8;
}

message GetNewAddressRequest {}

message GetNewAddressResponse {
  string address = 1;
}

message OpenChannelRequest {
  string node_id = 1;
  string address = 2;
  uint32 port = 3;
  uint64 amount_msats = 4;
  optional uint64 push_to_counter_party_msats = 5;
}

message OpenChannelResponse {
  string channel_id = 1;
}

message CloseChannelRequest {
  string channel_id = 1;
  string node_pubkey = 2;
}

message CloseChannelResponse {
}

message ListBalanceRequest {}

message ListBalanceResponse {
  uint64 total_onchain_balance_sats = 1;
  uint64 spendable_onchain_balance_sats = 2;
  uint64 total_lightning_balance_sats = 3;
}

message SendOnchainRequest {
  uint64 amount_sat = 1;
  string address = 2;
}

message SendOnchainResponse {
  string txid = 1;
}

message PayBolt11InvoiceRequest {
  string invoice = 1;
  optional uint64 amount_msats = 2;  // Optional: amount to pay if not specified in invoice
}

message PayBolt12OfferRequest {
  string offer = 1;
  uint64 amount_msats = 2;  // Required: amount to pay
}

message PaymentResponse {
  string payment_hash = 1;
  string payment_preimage = 2;
  uint64 fee_msats = 3;
  bool success = 4;
  optional string failure_reason = 5;
}

message CreateBolt11InvoiceRequest {
  uint64 amount_msats = 1;
  string description = 2;
  optional uint32 expiry_seconds = 3; // defaults to 1 hour if not specified
}

message CreateInvoiceResponse {
  string payment_hash = 1;
  string invoice = 2;
  uint64 expiry_time = 3; // unix timestamp when invoice expires
}

message CreateBolt12OfferRequest {
  optional uint64 amount_msats = 1; // If not provided, creates a variable-amount offer
  string description = 2;
  optional uint32 expiry_seconds = 3; // defaults to 1 hour if not specified
}

message CreateOfferResponse {
  string offer_id = 1;
  string offer = 2;
  uint64 expiry_time = 3; // unix timestamp when offer expires
}

message ListChannelsRequest {}

message ChannelInfo {
  string channel_id = 1;
  string counterparty_node_id = 2;
  uint64 balance_msat = 3;
  uint64 outbound_capacity_msat = 4;
  uint64 inbound_capacity_msat = 5;
  bool is_usable = 6;
  bool is_public = 7;
  string short_channel_id = 8;
}

message ListChannelsResponse {
  repeated ChannelInfo channels = 1;
}
